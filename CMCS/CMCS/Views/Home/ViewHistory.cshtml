@model IEnumerable<CMCS.Models.Claim>
@{
    ViewData["Title"] = "My Claim History";
}

<div class="row">
    <div class="col-md-12">
        <h1 class="text-light">My Claim History</h1>
        <p class="text-muted">View your submitted claims and their status</p>
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="card bg-dark text-light mt-4 mb-5">
    <div class="card-header bg-secondary">
        <div class="d-flex justify-content-between align-items-center">
            <span class="text-light">All My Claims</span>
            <a href="@Url.Action("SubmitClaim", "Home")" class="btn btn-primary btn-sm">
                <i class="bi bi-plus-circle"></i> Submit New Claim
            </a>
        </div>
    </div>
    <div class="card-body">
        @if (!Model.Any())
        {
            <div class="text-center py-5">
                <i class="bi bi-inbox display-1 text-muted"></i>
                <h4 class="mt-3 text-light">No claims found</h4>
                <p class="text-muted">You haven't submitted any claims yet.</p>
                <a href="@Url.Action("SubmitClaim", "Home")" class="btn btn-primary mt-2">
                    <i class="bi bi-plus-circle"></i> Submit Your First Claim
                </a>
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-dark table-striped table-hover">
                    <thead>
                        <tr>
                            <th class="text-light">Claim ID</th>
                            <th class="text-light">Submission Date</th>
                            <th class="text-light">Period</th>
                            <th class="text-light">Workload</th>
                            <th class="text-light">Amount</th>
                            <th class="text-light">Status</th>
                            <th class="text-light">Processed By</th>
                            <th class="text-light">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var claim in Model)
                        {
                            <tr>
                                <td class="text-light">CL-@claim.ClaimId.ToString("D4")</td>
                                <td class="text-light">@claim.SubmitDate.ToString("yyyy-MM-dd")</td>
                                <td class="text-light">@claim.Period</td>
                                <td class="text-light">@claim.Workload hours</td>
                                <td class="text-light">@claim.Amount.ToString("C")</td>
                                <td>
                                    <span class="badge @GetStatusBadgeClass(claim.Status)">@GetStatusDisplay(claim.Status)</span>
                                </td>
                                <td class="text-light">
                                    @if (claim.ProcessedByUser != null)
                                    {
                                        @claim.ProcessedByUser.FirstName @claim.ProcessedByUser.LastName
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>
                                    <a href="@Url.Action("Details", "Claims", new { id = claim.ClaimId })" class="btn btn-info btn-sm">
                                        <i class="bi bi-eye"></i> View
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Status Summary -->
            <div class="row mt-4">
                <div class="col-md-3">
                    <div class="card stat-card bg-dark text-light">
                        <div class="card-body text-center">
                            <h5 class="display-6 text-warning">@Model.Count(c => c.Status == ClaimStatus.Pending)</h5>
                            <p class="mb-0 text-light">Pending</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card stat-card bg-dark text-light">
                        <div class="card-body text-center">
                            <h5 class="display-6 text-info">@Model.Count(c => c.Status == ClaimStatus.CoordinatorApproved)</h5>
                            <p class="mb-0 text-light">Waiting for Manager</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card stat-card bg-dark text-light">
                        <div class="card-body text-center">
                            <h5 class="display-6 text-success">@Model.Count(c => c.Status == ClaimStatus.Approved)</h5>
                            <p class="mb-0 text-light">Approved</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card stat-card bg-dark text-light">
                        <div class="card-body text-center">
                            <h5 class="display-6 text-danger">@Model.Count(c => c.Status == ClaimStatus.Rejected)</h5>
                            <p class="mb-0 text-light">Rejected</p>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Quick Stats -->
<div class="row mt-4 mb-5">
    <div class="col-md-3">
        <div class="card bg-dark text-light">
            <div class="card-body text-center">
                <h5 class="card-title text-light">Total Claims</h5>
                <h3 class="text-primary">@Model.Count()</h3>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-dark text-light">
            <div class="card-body text-center">
                <h5 class="card-title text-light">Total Amount</h5>
                <h3 class="text-success">@Model.Sum(c => c.Amount).ToString("C")</h3>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-dark text-light">
            <div class="card-body text-center">
                <h5 class="card-title text-light">Average Workload</h5>
                <h3 class="text-info">@(Model.Any() ? Model.Average(c => c.Workload).ToString("F1") : "0") hours</h3>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-dark text-light">
            <div class="card-body text-center">
                <h5 class="card-title text-light">Success Rate</h5>
                <h3 class="text-warning">@(Model.Any() ? ((Model.Count(c => c.Status == ClaimStatus.Approved) / (double)Model.Count()) * 100).ToString("F1") : "0")%</h3>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetStatusBadgeClass(ClaimStatus status)
    {
        return status switch
        {
            ClaimStatus.Pending => "bg-warning",
            ClaimStatus.Approved => "bg-success",
            ClaimStatus.Rejected => "bg-danger",
            ClaimStatus.CoordinatorApproved => "bg-info",
            _ => "bg-secondary"
        };
    }

    public string GetStatusDisplay(ClaimStatus status)
    {
        return status switch
        {
            ClaimStatus.Pending => "Pending",
            ClaimStatus.Approved => "Approved",
            ClaimStatus.Rejected => "Rejected",
            ClaimStatus.CoordinatorApproved => "Waiting for Manager",
            _ => status.ToString()
        };
    }
}